= form_for(@device) do |f|
  - if @device.errors.present?
    .alert-container
      .alert.alert-error
        %ul
          - @device.errors.full_messages.each do |msg|
            %li= msg

  = render 'shared/select_institution_or_hidden', f: f

  .row
    .col.pe-2
      = f.label :device_model_id
    .col#device_models
      = render "device_models"
  - if has_access?(Site, Policy::Actions::READ_SITE)
    .row
      .col.pe-2
        = f.label :site
      .col#device_sites
        = render "sites"
  .row
    .col.pe-2
      = f.label :name
    .col
      = f.text_field :name
  .row
    .col.pe-2
      = f.label :serial_number
    .col
      = f.text_field :serial_number
  .row
    .col.pe-2
      = f.label :time_zone
    .col
      = cdx_select form: f, name: :time_zone, class: 'input-xx-large' do |select|
        - select.items(ActiveSupport::TimeZone.all, :name, :to_s)
  #custom_mappings
    = render "custom_mappings" if @device.device_model

  .row.button-actions
    .col
      = f.submit 'Save', class: 'btn-primary'
      - if @can_delete
        = link_to "Delete", @device, method: :delete, data: { confirm: "You are about to permanently delete this site. This action CANNOT be undone. Are you sure you want to proceed?" }, class: 'btn-secondary pull-right'

:coffeescript
  $ ->
    selected_device_model_id = #{@device.device_model_id.to_s.to_json}
    cdx_select_on_change "device[device_model_id]", (device_model_id) ->
      if device_model_id != selected_device_model_id
        $("#custom_mappings").load(
          "/devices/custom_mappings",
          {
            "device_model_id": device_model_id,
            "device_id": #{@device.id.to_json}
          },
          ->
            cdx_init_components($("#custom_mappings"))
        )
        selected_device_model_id = device_model_id

    if $('form.new_device').length > 0 && cdx_select_find("device[institution_id]").length > 0
      selected_institution_id = #{@device.institution_id}
      cdx_select_on_change "device[institution_id]", (institution_id) ->
        if institution_id != selected_institution_id
          $("#device_models").load(
            "/devices/new/device_models",
            {"institution_id": institution_id},
            ->
              cdx_init_components($("#device_models"))
              $("#custom_mappings").empty()
          )

          $("#device_sites").load(
            "/devices/sites",
            {"institution_id": institution_id},
            ->
              cdx_init_components($("#device_sites"))
          )
          selected_institution_id = institution_id
