.dashboard
  %section.row
    .small-12.columns
      .search
        %form#filters-form{ action: dashboard_path }

          .topdatefrom
            %label.block
              = I18n.t('dashboard.index.date_from')
            = date_field('range','start_time[gte]', value: (params['range'].nil? ? '' : params['range']['start_time']['gte']), max: Date.today)

          .topdateto
            %label.block 
              = I18n.t('dashboard.index.date_to')
            = date_field('range','start_time[lte]', value: (params['range'].nil? ? '' : params['range']['start_time']['lte']) )

          .topdateperiod
            %form#filters-form{ action: dashboard_path, 'data-auto-submit' => true }
              .filter
                %label.block
                  = I18n.t('dashboard.index.date_period')
                = cdx_select name: 'since', value: params['since'] do |select|
                  - select.items options_for_date, :value, :label

              .topbutton
                %input#query_button.btn-primary(type='submit' value="#{I18n.t('dashboard.index.filter_button')}")

  :javascript
    $(document).ready( function()
    {
      $('input[name=since]').on('change', function() 
      {
        $('input#range_start_time\\[gte\\]').val( $(this).val() );
        $('input#range_start_time\\[lte\\]').val( new Date().toJSON().slice(0,10) );
      });
    })

  %main
    %section.row
      .small-8.columns.box
        %header
          = image_tag('img/test-tube-rack.png')
          %h3
            = I18n.t('dashboard.index.total_tests')
        .box-content
          #chartContainer{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartContainer', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.total_tests).render
      .small-4.columns.box
        %header
          = image_tag('img/test-tube.png')
          %h3
            = I18n.t('dashboard.index.failed_tests')
        .box-content
          #failedChartContainer{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'failedChartContainer', chartData: Extras::Charts::Pie.new(@dashboard_report.failed_tests).render
    %section.row
      .small-6.columns.box
        %header
          =image_tag('img/site.png')
          %h3
            = I18n.t('dashboard.index.total_tests_by_site')
        .box-content
          #chartTotalTestsSite{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartTotalTestsSite', chartData: Extras::Charts::HorizontalColumns.new(@dashboard_report.query_site_tests).render
      .col.small-6.columns.box
        %header
          =image_tag('img/site.png')
          %h3
            = I18n.t('dashboard.index.average_tests_by_site')
        .box-content
          #chartAverageTestsSite{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartAverageTestsSite', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.average_test_per_site).render
    %section.row
      .small-4.columns.box
        %header
          = image_tag('img/device.png')
          %h3
            = I18n.t('dashboard.index.total_tests_by_device')
        .box-content
          #chartTotalTestsDevice{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartTotalTestsDevice', chartData: Extras::Charts::Pie.new(@dashboard_report.total_tests_by_device).render

      .small-8.columns.box
        %header
          = image_tag('img/user.png')
          %h3
            = I18n.t('dashboard.index.average_tests_by_technician')
        .box-content
          #chartAverageTestsTechnician{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartAverageTestsTechnician', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.average_tests_per_technician).render

    -#%section.row
      .small-8.columns.box
        %header
          =image_tag('img/site.png')
          %h3 
            = I18n.t('dashboard.index.devices_not_responding')
        .box-content
          #chartDevicesNotResponding{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartDevicesNotResponding', chartData: Extras::Charts::HorizontalColumns.new(@dashboard_report.devices_not_responding).render
      .small-4.columns.box
        %header
          = image_tag('img/user.png')
          %h3
            = I18n.t('dashboard.index.device_error_codes')
        .box-content
          #chartDeviceErrorCodes{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartDeviceErrorCodes', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.error_codes_by_device).render

    %section.row
      .small-12.columns.box
        %header
          = image_tag('img/test-tube.png')
          %h3
            = I18n.t('dashboard.index.outstanding_tests')
        .box-content
          -if(@dashboard_report.outstanding_orders)
            = react_component('OutstandingTestsTable', title: "title", allowSorting: "true", orderBy: "-test_order", data: @dashboard_report.outstanding_orders)
          -else
            = I18n.t('dashboard.index.no_chart_information')
